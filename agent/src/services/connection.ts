import { Agent } from '@aries-framework/core';
import { returnWhenConnected } from './events';
import { cyan, underscore, yellow } from '../utils';
import Logger from '../utils/loggers';
import { agent } from '../agent/agent';

export const createConnection = async (sender: Agent, recipient: Agent) => {
  const outOfBandRecord = await sender.oob.createInvitation();

  const {
    outOfBandRecord: { id },
  } = await recipient.oob.receiveInvitation(
    outOfBandRecord.outOfBandInvitation
  );

  // Id generated by recipient agent and sender agent
  const recipientConnectionListner = returnWhenConnected(recipient, id);
  const senderConnectionListner = returnWhenConnected(
    sender,
    outOfBandRecord.id
  );

  const [, connectionId] = await Promise.all([
    recipientConnectionListner,
    senderConnectionListner,
  ]);

  Logger.info(
    `Established a ${underscore('connection')}: ${cyan(
      sender.config.label
    )} <-> ${yellow(recipient.config.label)}`
  );

  return connectionId;
};

export const getAllConnections = async () => {
  try {
    const connections = await agent.connections.getAll();
    return connections;
  } catch (error) {
    throw new Error('connection error');
  }
};
